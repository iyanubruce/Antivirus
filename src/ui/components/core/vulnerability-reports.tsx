import React from "react";
import { Vulnerability } from "../../types/interfaces";

interface VulnerabilityReportsProps {
  theme: "light" | "dark";
  vulnerabilities: Vulnerability[];
  checkVulnerabilities: () => Promise<void>;
  loading: boolean;
  handleVulnerabilityClick: (vulnerability: Vulnerability) => void;
}

export const VulnerabilityReports: React.FC<VulnerabilityReportsProps> = ({
  theme,
  loading,
  vulnerabilities,
  checkVulnerabilities,
  handleVulnerabilityClick,
}) => {
  return (
    <div className="max-w-4xl mx-auto w-full">
      <div className="mb-6">
        <h2 className="text-2xl font-semibold mb-2">Vulnerability Reports</h2>
        <p
          className={`${theme === "light" ? "text-gray-600" : "text-gray-400"}`}
        >
          View and analyze detected software vulnerabilities
        </p>
      </div>
      <div
        className={`rounded-lg ${
          theme === "light" ? "bg-white shadow-sm" : "bg-gray-800 shadow-md"
        } p-6 mb-6`}
      >
        <div className="flex justify-between items-center mb-6">
          <div>
            <h3 className="text-xl font-semibold">
              Latest Vulnerability Check
            </h3>
            <p
              className={`text-sm ${
                theme === "light" ? "text-gray-600" : "text-gray-400"
              }`}
            >
              {new Date().toLocaleString()}
            </p>
          </div>
          <button
            onClick={checkVulnerabilities}
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors !rounded-button whitespace-nowrap"
          >
            <i
              className={`fas ${loading ? "fa-spin" : ""} fa-sync-alt mr-2`}
            ></i>
            Recheck
          </button>
        </div>
        <div className="space-y-4">
          <div
            className={`p-4 rounded-lg ${
              theme === "light" ? "bg-gray-50" : "bg-gray-700"
            }`}
          >
            <div className="grid grid-cols-3 gap-4 text-sm">
              <div>
                <p
                  className={`${
                    theme === "light" ? "text-gray-600" : "text-gray-400"
                  }`}
                >
                  Software Checked
                </p>
                <p className="font-semibold mt-1">
                  {vulnerabilities.length || 0}
                </p>
              </div>
              <div>
                <p
                  className={`${
                    theme === "light" ? "text-gray-600" : "text-gray-400"
                  }`}
                >
                  Check Duration
                </p>
                <p className="font-semibold mt-1">N/A</p>
              </div>
              <div>
                <p
                  className={`${
                    theme === "light" ? "text-gray-600" : "text-gray-400"
                  }`}
                >
                  Vulnerabilities Found
                </p>
                <p className="font-semibold mt-1 text-yellow-600">
                  {vulnerabilities.length}
                </p>
              </div>
            </div>
          </div>
          <div className="space-y-4">
            <h4 className="font-medium">Detected Vulnerabilities</h4>
            {vulnerabilities.length === 0 ? (
              <p
                className={`text-sm ${
                  theme === "light" ? "text-gray-600" : "textiversal-gray-400"
                }`}
              >
                No vulnerabilities detected in the last check.
              </p>
            ) : (
              vulnerabilities.map((vuln, idx) => (
                <div
                  key={idx}
                  className={`${
                    theme === "light" ? "bg-gray-50" : "bg-gray-700"
                  } p-4 border-b ${
                    theme === "light" ? "border-gray-200" : "border-gray-600"
                  }`}
                >
                  <div className="flex items-center justify-between">
                    <div>
                      <div className="flex items-center gap-2">
                        <p className="font-medium">{vuln.id}</p>
                        <span
                          className={`px-2 py-1 text-xs rounded-full ${
                            vuln.severity === "LOW"
                              ? "bg-yellow-100 text-yellow-800"
                              : vuln.severity === "MEDIUM"
                              ? "bg-orange-100 text-orange-800"
                              : "bg-red-100 text-red-800"
                          }`}
                        >
                          {vuln.severity || "Unknown"}
                        </span>
                      </div>
                      <p
                        className={`text-sm ${
                          theme === "light" ? "text-gray-600" : "text-gray-400"
                        } mt-1`}
                      >
                        {vuln.affectedComponent || "Unknown Component"}
                      </p>
                    </div>
                    <button
                      onClick={() => handleVulnerabilityClick(vuln)}
                      className="text-blue-600 hover:text-blue-700 font-medium !rounded-button whitespace-nowrap"
                    >
                      <i className="fas fa-arrow-right"></i>
                    </button>
                  </div>
                  <div className="mt-2">
                    <p
                      className={`text-sm ${
                        theme === "light" ? "text-gray-600" : "text-gray-400"
                      }`}
                    >
                      {vuln.description}
                    </p>
                    <div className="mt-2 flex gap-2">
                      <span
                        className={`text-xs px-2 py-1 rounded-full ${
                          theme === "light" ? "bg-gray-100" : "bg-gray-600"
                        }`}
                      >
                        CVSS: {vuln.cvssScore?.toFixed(1) || "N/A"}
                      </span>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>
      </div>
    </div>
  );
};
